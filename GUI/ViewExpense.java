/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;

import java.sql.*;                          // Imported for performing task of SQL/MYSQL
import java.util.Date;                      // Imported for taking date as input
import java.sql.Connection;                 // Imported to establish connection with data base
import javax.swing.JFrame;                  // importing for using Jframe properties
import javax.swing.JOptionPane;             // Imported for using properties of JOptionPane
import javax.swing.table.DefaultTableModel; // Imported for Performing tasks on tables



/**
 *
 * @author lenovo
 */
public class ViewExpense extends javax.swing.JFrame {

    /**
     * Creates new form ViewExpense
     */
    public ViewExpense() {
        
        initComponents();
        displayCategories();
        
        // set current date int date fields
        StartDate.setDate(new Date());
        EndDate.setDate(new Date());
        
        StartDateCategory.setDate(new Date());
        EndDateCategory.setDate(new Date());
        
        
        // for limiting date selection till current date we will choose range
        EndDate.setSelectableDateRange(null,new Date());
        EndDateCategory.setSelectableDateRange(null,new Date());
        
        // calling a constructor for opening full frame
        this.setExtendedState(JFrame.MAXIMIZED_BOTH);
    }
    
    void displayCategories(){
        
        try{
            
            //FIRST NEED TO REMOVE ALL DATA FROM CATEGORY FIELD
            SelectCategories.removeAllItems();
            
            // database connectivity
                Connection con = DatabaseConnection.Mconnection.getConn();  

                // create statement for selecting categories from database
                Statement st = con.createStatement();      

                // use select query for get the data & store it in Result set
                ResultSet res = st.executeQuery("select * from category_information");
                
                // by Default we will show "Select" as a option in category field 
                SelectCategories.addItem("Select");
                
                // now using for loop we will show categories in select category field
                while(res.next()){
                    SelectCategories.addItem(res.getString("category"));
                }
                
                
        }catch(Exception ex){
            JOptionPane.showMessageDialog(null,ex);
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollBar1 = new javax.swing.JScrollBar();
        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        StartDateCategory = new com.toedter.calendar.JDateChooser();
        jLabel3 = new javax.swing.JLabel();
        EndDateCategory = new com.toedter.calendar.JDateChooser();
        SearchCategory = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        TotalAmountCategory = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        SelectCategories = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        ExpenseTableCategory = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        StartDate = new com.toedter.calendar.JDateChooser();
        jLabel14 = new javax.swing.JLabel();
        EndDate = new com.toedter.calendar.JDateChooser();
        SearchDate = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        TotalAmountDate = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ExpenseTableDate = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("View Expenses");

        jPanel2.setBackground(new java.awt.Color(255, 204, 102));

        jPanel1.setBackground(new java.awt.Color(51, 0, 204));

        jLabel1.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Expenses According Category");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jLabel2.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("From:");

        jLabel3.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel3.setText("To:");

        EndDateCategory.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                EndDateCategoryPropertyChange(evt);
            }
        });

        SearchCategory.setBackground(new java.awt.Color(51, 0, 204));
        SearchCategory.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        SearchCategory.setForeground(new java.awt.Color(255, 255, 255));
        SearchCategory.setText("Search");
        SearchCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchCategoryActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel4.setText("Total Amount:");

        TotalAmountCategory.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        TotalAmountCategory.setText("0");

        jLabel11.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("Category:");

        SelectCategories.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        SelectCategories.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SelectCategoriesActionPerformed(evt);
            }
        });

        ExpenseTableCategory.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No.", "Name", "Category", "Date", "Amount"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(ExpenseTableCategory);

        jButton1.setBackground(new java.awt.Color(153, 255, 153));
        jButton1.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jButton1.setText("Refresh");
        jButton1.setToolTipText("");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel11)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(EndDateCategory, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(StartDateCategory, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(SelectCategories, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jButton1)
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(SearchCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(TotalAmountCategory, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addComponent(jScrollPane2)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel11)
                        .addComponent(SelectCategories, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(StartDateCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(EndDateCategory, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SearchCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TotalAmountCategory))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 287, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {EndDateCategory, SelectCategories, StartDateCategory, jLabel11, jLabel2, jLabel3});

        jPanel5.setBackground(new java.awt.Color(255, 204, 102));

        jPanel6.setBackground(new java.awt.Color(51, 0, 204));

        jLabel12.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("Expenses According Date");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jLabel13.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText("From:");

        jLabel14.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel14.setText("To:");

        EndDate.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                EndDatePropertyChange(evt);
            }
        });

        SearchDate.setBackground(new java.awt.Color(51, 0, 204));
        SearchDate.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        SearchDate.setForeground(new java.awt.Color(255, 255, 255));
        SearchDate.setText("Search");
        SearchDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchDateActionPerformed(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel15.setText("Total Amount:");

        TotalAmountDate.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        TotalAmountDate.setText("0");

        ExpenseTableDate.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No.", "Name", "Category", "Date", "Amount"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(ExpenseTableDate);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 458, Short.MAX_VALUE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel13)
                            .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(EndDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(StartDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(SearchDate, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(TotalAmountDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel13)
                    .addComponent(StartDate, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel14)
                    .addComponent(EndDate, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(48, 48, 48)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SearchDate, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TotalAmountDate, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void SearchCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchCategoryActionPerformed
        
        try{
             
            // get date from user
            Date sdate = StartDateCategory.getDate();
            Date edate = EndDateCategory.getDate();
            
            // get Selected category
            String Category = (String)SelectCategories.getSelectedItem();
            
            // Process if all fields are filled 
            if(Category.equals("Select")){
                // As by default we are showing "Select" in category so need to take care that 
                // we will not adding "Select" as category
                JOptionPane.showMessageDialog(null, "Please select any category !!!");
            }
            else if(sdate != null && edate != null){
                
                // get date from date choosers and converting it in sqp format
                java.sql.Date stDate = new java.sql.Date(StartDateCategory.getDate().getTime());
                java.sql.Date edDate = new java.sql.Date(EndDateCategory.getDate().getTime());
                
                
                // data base connectivity
                Connection con = DatabaseConnection.Mconnection.getConn();  

                // create statement for retrieve data from data base
                Statement st = con.createStatement(); 
            
                // execute the query & store data in result set
                ResultSet res = st.executeQuery("select * from expenses where expense_date >= '"+stDate+"' "
                  + "and expense_date <= '"+edDate+"' and category = '"+Category+"' order by category asc");

                // create table model for inserting data
                DefaultTableModel tableData = (DefaultTableModel)ExpenseTableCategory.getModel();
                
                // store the count of rows already present in table
                int rowCount = tableData.getRowCount();
            
                // remove row present at 0th index
                // after deletion of 0th row next row become 0th row
                while(rowCount-- != 0){
                    tableData.removeRow(0);
                }

                // Serial Number
                int serialNumber = 0;
                int totalAmount = 0;
            
                while(res.next()){
                
                    totalAmount += res.getInt("amount");
                    // create a row and insert in table
                    Object obj[] = {++serialNumber,res.getString("name"),res.getString("category"),
                                                 res.getDate("expense_date"),res.getInt("amount")};

                    tableData.addRow(obj);
                
                }
                
                TotalAmountCategory.setText(totalAmount + "");
            }else{
                JOptionPane.showMessageDialog(null,"Please fill complete details !!!");
            }
            
        }catch(Exception ex){
            JOptionPane.showMessageDialog(null,ex);
        }
        
    }//GEN-LAST:event_SearchCategoryActionPerformed

    private void SelectCategoriesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SelectCategoriesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SelectCategoriesActionPerformed

    private void SearchDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchDateActionPerformed
        
         
         try{
             
            // get date from user
            Date sdate = StartDate.getDate();
            Date edate = EndDate.getDate();
            
            if(sdate != null && edate != null){
                
                // get date from date choosers and converting it in sqp format
                java.sql.Date stDate = new java.sql.Date(StartDate.getDate().getTime());
                java.sql.Date edDate = new java.sql.Date(EndDate.getDate().getTime());
                
                // data base connectivity
                Connection con = DatabaseConnection.Mconnection.getConn();  

                // create statement for retrieve data from data base
                Statement st = con.createStatement(); 
            
                // execute the query & store data in result set
                ResultSet res = st.executeQuery("select * from expenses where expense_date >= '"+stDate+"' "
                                             + "and expense_date <= '"+edDate+"' order by expense_date asc");

                // create table model for inserting data
                DefaultTableModel tableData = (DefaultTableModel)ExpenseTableDate.getModel();
                
                // store the count of rows already present in table
                int rowCount = tableData.getRowCount();
            
                // remove row present at 0th index
                // after deletion of 0th row next row become 0th row
                while(rowCount-- != 0){
                    tableData.removeRow(0);
                }

                // Serial Number
                int serialNumber = 0;
                int totalAmount = 0;
            
                while(res.next()){
                    
                    // also add amount in total amount
                    totalAmount += res.getInt("amount");
                
                    // create a row and insert in table
                    Object obj[] = {++serialNumber,res.getString("name"),res.getString("category"),
                                                 res.getDate("expense_date"),res.getInt("amount")};

                    tableData.addRow(obj);
                
                }
                
                // displaye amount
                TotalAmountDate.setText(totalAmount + "");
            }else{
                JOptionPane.showMessageDialog(null,"Please fill complete details !!!");
            }
            
        }catch(Exception ex){
            JOptionPane.showMessageDialog(null,ex);
        }
        
    }//GEN-LAST:event_SearchDateActionPerformed

    private void EndDatePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_EndDatePropertyChange
        // TODO add your handling code here:
        
        EndDate.setSelectableDateRange(StartDate.getDate(), new Date());
    }//GEN-LAST:event_EndDatePropertyChange

    private void EndDateCategoryPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_EndDateCategoryPropertyChange
        // TODO add your handling code here:
        EndDateCategory.setSelectableDateRange(StartDateCategory.getDate(), new Date());
    }//GEN-LAST:event_EndDateCategoryPropertyChange

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        // RE-FRESH THE CATEGORY FIELD
        displayCategories();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
 

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser EndDate;
    private com.toedter.calendar.JDateChooser EndDateCategory;
    private javax.swing.JTable ExpenseTableCategory;
    private javax.swing.JTable ExpenseTableDate;
    private javax.swing.JButton SearchCategory;
    private javax.swing.JButton SearchDate;
    private javax.swing.JComboBox<String> SelectCategories;
    private com.toedter.calendar.JDateChooser StartDate;
    private com.toedter.calendar.JDateChooser StartDateCategory;
    private javax.swing.JLabel TotalAmountCategory;
    private javax.swing.JLabel TotalAmountDate;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollBar jScrollBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
